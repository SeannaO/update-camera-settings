{"version":3,"sources":["../../src/service/vms.js"],"names":[],"mappings":";;;;;;;;;AAAA;;IAAY,I;;AACZ;;;;AAEA;;;;;;;;;;;;;AAOO,IAAM,wBAAQ,sBAAsB,KAAtB,CAA4B,GAA5B,CAAd;;;;;;;;;2BAGS,M,EAAQ,S,EAAW;AAC/B,aAAO,mBAAQ,GAAR,CAAY,MAAM,GAAN,CAAU;AAAA,eAAK,uBAAU,KAAK,IAAL,CAAU,MAAV,EAAkB,CAAlB,CAAV,EAAgC,KAAK,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAhC,CAAL;AAAA,OAAV,CAAZ,CAAP;AACD;;;4BAEc,M,EAAQ;AACrB,aAAO,4BAAe,MAAf,EAAuB;AAAA,eAC5B,mBAAQ,GAAR,CAAY,MAAM,GAAN,CAAU;AAAA,iBAAK,4BAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAf,EAAwC,KAAK,IAAL,CAAU,MAAV,EAAkB,CAAlB,CAAxC,CAAL;AAAA,SAAV,CAAZ,CAD4B;AAAA,OAAvB,CAAP;AAGD","file":"vms.js","sourcesContent":["import * as path from 'path'\nimport Promise from 'bluebird'\n\nimport { copyAsync, restoreWrapper, overwriteAsync } from './_common'\n\n/*\n[DIR] SolinkConnect/data/vms\n  [FILES] cam_db multiview.db\n*/\n\nexport const FILES = 'cam_db multiview.db'.split(' ');\n\nexport default class {\n  static backup(srcDir, backupDir) {\n    return Promise.all(FILES.map(f => copyAsync(path.join(srcDir, f), path.join(backupDir, f))));\n  }\n  \n  static restore(cfgDir) {\n    return restoreWrapper(cfgDir, backupDir =>\n      Promise.all(FILES.map(f => overwriteAsync(path.join(backupDir, f), path.join(cfgDir, f))))\n    )\n  }\n}\n"]}