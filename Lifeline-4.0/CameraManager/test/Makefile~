
SRCS = parsing.c app_keep_alive.c api_callbacks.c

TEST_SRCS = parsing_test.cpp app_keep_alive_test.cpp api_callbacks_test.cpp test_main.cpp

##
## Flags
##

CXX = g++
CFLAGS = -I/usr/include -I../src
CFLAGS += $(shell pkg-config --cflags libsoup-2.4 glib-2.0 sqlite3 uuid)
LDFLAGS = -lpthread -lgtest -lgtest_main -L/usr/lib
LDFLAGS += $(shell pkg-config --libs libsoup-2.4 glib-2.0 sqlite3 uuid)
TEST_PLAINOBJS = $(TEST_SRCS:.cpp=.o)
TEST_OBJS = $(addprefix objs/,$(TEST_PLAINOBJS))

PLAINOBJS = $(SRCS:.c=.o)
OBJS = $(addprefix objs/,$(PLAINOBJS))


##
## Default flags
##
ifeq ($(build),release)
CFLAGS += -O2
else
CFLAGS += -O2 -g -DDEBUG
endif

all: test

###### Compile program

##
## Test
##

objs/%.o: ../src/%.c objs
	$(CXX) -Wall -Werror $(CFLAGS) $(INCLUDES) -c -o $@ $<

objs/%.o: src/%.cpp objs
	$(CXX) -Wall -Werror $(CFLAGS) $(INCLUDES) -c -o $@ $<

objs:
	mkdir -p objs

bin:
	mkdir -p bin

test: $(TEST_OBJS) $(OBJS) objs bin
	$(CXX) -o bin/CameraManagerTest $(CFLAGS) $(TEST_OBJS) $(OBJS) $(LDFLAGS)
	./bin/CameraManagerTest

